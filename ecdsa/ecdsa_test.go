package ecdsa

import (
	"testing"
)

type testPair struct {
	data [][]byte
	res  bool
}

var verifySignatureTests = []testPair{
	{
		[][]byte{
			{2, 41, 159, 246, 30, 250, 140, 201, 228, 53, 208, 45, 201, 127, 151, 80, 181, 102, 126, 225, 123, 253, 240, 127, 146, 189, 12, 62, 248, 18, 103, 156, 114},
			{10, 75, 8, 3, 16, 182, 139, 149, 220, 161, 147, 188, 187, 209, 1, 24, 140, 204, 228, 197, 1, 34, 54, 50, 48, 49, 56, 45, 48, 56, 45, 51, 49, 32, 49, 50, 58, 50, 57, 58, 49, 56, 46, 53, 49, 54, 56, 54, 49, 53, 53, 56, 32, 43, 48, 53, 51, 48, 32, 73, 83, 84, 32, 109, 61, 43, 51, 46, 50, 51, 48, 56, 51, 51, 53, 49, 48, 18, 32, 98, 5, 148, 136, 38, 186, 111, 32, 100, 80, 102, 206, 118, 79, 189, 121, 34, 104, 69, 14, 53, 23, 63, 23, 161, 109, 193, 187, 78, 81, 84, 65, 24, 2},
			{48, 69, 2, 33, 0, 246, 221, 110, 122, 230, 65, 163, 131, 14, 38, 228, 122, 66, 131, 123, 197, 57, 53, 225, 20, 110, 71, 253, 86, 163, 234, 43, 163, 70, 236, 170, 101, 2, 32, 49, 126, 111, 22, 60, 68, 158, 148, 37, 3, 237, 147, 241, 171, 16, 125, 93, 70, 217, 167, 151, 28, 219, 133, 8, 226, 62, 39, 16, 220, 122, 91},
		}, true,
	},

	{
		[][]byte{
			{2, 82, 99, 205, 51, 203, 45, 157, 92, 108, 28, 58, 131, 39, 161, 86, 110, 236, 168, 107, 50, 138, 30, 250, 89, 170, 28, 110, 194, 177, 68, 60, 169},
			{10, 75, 8, 3, 16, 182, 139, 149, 220, 161, 147, 188, 187, 209, 1, 24, 140, 204, 228, 197, 1, 34, 54, 50, 48, 49, 56, 45, 48, 56, 45, 51, 49, 32, 49, 50, 58, 50, 57, 58, 49, 56, 46, 53, 49, 54, 56, 54, 49, 53, 53, 56, 32, 43, 48, 53, 51, 48, 32, 73, 83, 84, 32, 109, 61, 43, 51, 46, 50, 51, 48, 56, 51, 51, 53, 49, 48, 18, 32, 98, 5, 148, 136, 38, 186, 111, 32, 100, 80, 102, 206, 118, 79, 189, 121, 34, 104, 69, 14, 53, 23, 63, 23, 161, 109, 193, 187, 78, 81, 84, 65, 24, 2},
			{48, 69, 2, 33, 0, 246, 221, 110, 122, 230, 65, 163, 131, 14, 38, 228, 122, 66, 131, 123, 197, 57, 53, 225, 20, 110, 71, 253, 86, 163, 234, 43, 163, 70, 236, 170, 101, 2, 32, 49, 126, 111, 22, 60, 68, 158, 148, 37, 3, 237, 147, 241, 171, 16, 125, 93, 70, 217, 167, 151, 28, 219, 133, 8, 226, 62, 39, 16, 220, 122, 91},
		}, false,
	},

	{
		[][]byte{
			{3, 253, 152, 41, 190, 123, 213, 30, 112, 122, 132, 187, 87, 14, 238, 25, 133, 248, 40, 197, 7, 204, 9, 185, 21, 191, 125, 194, 25, 116, 50, 242, 186},
			{10, 75, 8, 3, 16, 182, 139, 149, 220, 161, 147, 188, 187, 209, 1, 24, 150, 224, 231, 201, 6, 34, 54, 50, 48, 49, 56, 45, 48, 56, 45, 51, 49, 32, 49, 50, 58, 50, 57, 58, 49, 56, 46, 53, 49, 55, 48, 55, 51, 53, 51, 53, 32, 43, 48, 53, 51, 48, 32, 73, 83, 84, 32, 109, 61, 43, 53, 46, 52, 51, 49, 53, 49, 56, 56, 49, 55, 18, 32, 238, 170, 222, 126, 155, 19, 235, 199, 3, 209, 7, 236, 159, 147, 246, 73, 194, 19, 77, 175, 222, 233, 2, 209, 120, 180, 250, 2, 222, 77, 117, 69, 24, 1},
			{48, 69, 2, 33, 0, 253, 86, 148, 228, 48, 95, 182, 255, 203, 29, 232, 209, 11, 203, 16, 56, 27, 185, 12, 31, 144, 66, 104, 173, 79, 220, 141, 67, 39, 214, 209, 53, 2, 32, 48, 170, 100, 10, 189, 99, 250, 207, 170, 96, 102, 78, 31, 235, 30, 223, 202, 204, 86, 153, 228, 138, 127, 250, 221, 10, 204, 132, 247, 64, 11, 33},
		}, true,
	},
}

func TestKeyPair(t *testing.T) {
	ecdsa := NewCurveECDSA()
	for _, pair := range verifySignatureTests {
		output := ecdsa.Verify(pair.data[0], pair.data[1], pair.data[2])
		if output != pair.res {
			t.Error(
				"For", pair.data,
				"expected", pair.res,
				"got", output,
			)
		}
	}
}
